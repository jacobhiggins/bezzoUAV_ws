#ifndef __POSCOMMAND_H
#define __POSCOMMAND_H

#include "ros/ros.h"
#include "std_msgs/String.h"
#include "geometry_msgs/Vector3.h"
#include "geometry_msgs/Twist.h"
#include "iris_msgs/PositionCommand.h"
#include "nav_msgs/Odometry.h"
#include "std_msgs/Empty.h"
#include <string>



class PosCommand
{
  private:
    ros::NodeHandle nh_;
    ros::Publisher cmd_pub;
    ros::Publisher tg_pub;
    ros::Subscriber odom_sub;

    ros::Subscriber takeoff_sub;
    ros::Subscriber land_sub;
    ros::Subscriber pos_sub;
    ros::Subscriber vel_sub;

    // position command 
    quadrotor_msgs::PositionCommand pos_cmd;

    // odom variable
    nav_msgs::Odometry odom_msg;
    
 
    // parameters
    float threshold;
    int count;
    int max_size;
    bool is_posCb_flag;
    bool isGoalReached;
    bool isTookoff;
    double waypts[10][3];


/*const int A::test[10][10] = {
#include "data.inc" // points to the file generated by script.
};
*/   


  public:
    PosCommand();
    ~PosCommand();
    void odomCb(const nav_msgs::OdometryConstPtr &odomPtr); 
    void takeoffCb(const std_msgs::Empty emp_msg);
    void landCb(const std_msgs::Empty emp_msg); 
    void posCb(const std_msgs::StringConstPtr &traj_msg);
    void velCb(const geometry_msgs::TwistConstPtr &vel_msg);
    void setNewTarget();
    void resetEverything();
    void Loop();
		


};


// define waypts variable
// rectangle
const double waypts_1[4][3] = {{-2, 0, 1}, {-2, -2, 1}, {0, -2, 1}, {0, 0, 1}};
// house
const double waypts_2[10][3] = {{-1, 0, 1}, {1, 0, 1}, {-1, -2, 1}, {1, -2, 1},
                                {0, -3, 1}, {-1,-2,1}, {-1,  0, 1}, {1, -2, 1},
                                {1, 0,  1}, {0, 0, 1}};



#endif
